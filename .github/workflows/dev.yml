name: 'Workflow kolokwium2 na branchu innym od main'
on:
  push:
        branches-ignore:
          - main
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Lint code
        run: npm run lint
  unit-tests:
    outputs:
      success: ${{ steps.test.outputs.success }}
    env:
      NODE_ENV: test
      NODE_VERSION: 18
    environment: test
    runs-on: ubuntu-latest
    container:
      image: node:18
      options: --cpus 2 --memory 4g
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Run unit tests
        run: npm run test:unit
      - name: Set success
        id: test
        run: echo "success=true" >> $GITHUB_OUTPUT
  build-docker-image:
    needs:
      - lint
      - unit-tests
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name:  Load and cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Build image
        run: docker build -t stanoz03/kol2:latest .
      - name: Save Docker image as artifact
        run: docker save stanoz03/kol2:latest -o app-image.tar
      - name: Upload image
        uses: actions/upload-artifact@v4
        with:
          path: app-image.tar
          name: app-image
  deploy-app:
    needs: build-docker-image
    environment:
      name: production
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Deploy process
        id: deploy-process
        uses: ./.github/actions/deploy
        with:
          environment: 'node'
      - name: Display deployment URL and time
        run: |
          echo "Deployment URL ${{ steps.deploy-process.outputs.deployment-url}}"
          echo "Deployment time ${{ steps.deploy-process.outputs.deployment-time }}"
  docker-hub-push:
    needs:
      - deploy-app
    runs-on: ubuntu-latest
    environment: test
    steps:
      - name: Get code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: stanoz03/kol2:latest
          build-args: NODE_VERSION=18
  notify:
    if: always()
    runs-on: ubuntu-latest
    needs:
      - lint
      - unit-tests
      - deploy-app
      - build-docker-image
      - docker-hub-push
    steps:
      - name: Create summary report
        run: |
          echo "Podsumowanie etapÃ³w:" > raport.txt
          echo "Lint: ${{ needs.lint.result }}" >> raport.txt
          echo "Unit tests: ${{ needs.unit-tests.result }}" >> raport.txt
          echo "Deploy app: ${{ needs.deploy-app.result }}" >> raport.txt
          echo "Build Docker image: ${{ needs.build-docker-image.result }}" >> raport.txt
          echo "Docker Hub push: ${{ needs.docker-hub-push.result }}" >> raport.txt
      - name: Upload report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: raport
          path: raport.txt
